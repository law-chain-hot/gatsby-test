{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","nodes","length","style","listStyle","className","map","post","frontmatter","fields","slug","key","itemScope","itemType","to","itemProp","date","pageQuery"],"mappings":"2FAAA,oIAmEeA,UA1DG,SAAC,GAAwB,IAAD,EAArBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SACnBC,GAAY,UAAAF,EAAKG,KAAKC,oBAAV,eAAwBC,QAAxB,QACZC,EAAQN,EAAKO,kBAAkBC,MAErC,OAAqB,IAAjBF,EAAMG,OAEN,kBAAC,IAAD,CAAQR,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,yLAUJ,kBAAC,IAAD,CAAQJ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,cACX,wBAAIK,MAAO,CAAEC,UAAU,QAAWC,UAAU,gBACzCN,EAAMO,KAAI,SAAAC,GACT,IAAMT,EAAQS,EAAKC,YAAYV,OAASS,EAAKE,OAAOC,KAEpD,OACE,wBAAIC,IAAKJ,EAAKE,OAAOC,KAAML,UAAU,gBACnC,6BACEA,UAAU,2BACVO,WAAS,EACTC,SAAS,6BAET,kBAAC,OAAD,CAAMC,GAAIP,EAAKE,OAAOC,KAAMK,SAAS,MAAMV,UAAU,IACnD,gCACE,4BACE,0BAAMU,SAAS,YAAYjB,IAE7B,2BAAIS,EAAKC,YAAYQ,SAa3B,oCAWP,IAAMC,EAAS,c","file":"component---src-pages-index-js-a867becb13a5e7830116.js","sourcesContent":["import React, { Fragment } from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nimport \"./post-link.css\"\n\nconst BlogIndex = ({ data, location }) => {\n  const siteTitle = data.site.siteMetadata?.title || `Title`\n  const posts = data.allMarkdownRemark.nodes\n\n  if (posts.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title=\"All posts\" />\n      <ol style={{ listStyle: `none` }} className=\"post-list-ol\">\n        {posts.map(post => {\n          const title = post.frontmatter.title || post.fields.slug\n\n          return (\n            <li key={post.fields.slug} className=\"post-list-li\">\n              <article\n                className=\"post-list-item post-link\"\n                itemScope\n                itemType=\"http://schema.org/Article\"\n              >\n                <Link to={post.fields.slug} itemProp=\"url\" className=\"\">\n                  <header>\n                    <h4>\n                      <span itemProp=\"headline\">{title}</span>\n                    </h4>\n                    <p>{post.frontmatter.date}</p>\n                  </header>\n                </Link>\n\n                {/* <section>\n                  <p\n                    dangerouslySetInnerHTML={{\n                      __html: post.frontmatter.description || post.excerpt,\n                    }}\n                    itemProp=\"description\"\n                  />\n                </section> */}\n              </article>\n              <hr></hr>\n            </li>\n          )\n        })}\n      </ol>\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      nodes {\n        excerpt\n        fields {\n          slug\n        }\n        frontmatter {\n          date\n          title\n          description\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}